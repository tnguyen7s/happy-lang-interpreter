<program> ::= <main-fun> <fun-declist>
		   | <main-fun>

<main-fun> ::= "MAIN" "(" ")" <block>

<fun-declist> ::= <fun>
			| <fun-declist> <fun>

<fun> ::= <id> "(" ")" <block>
	   |<id> "(" <param-list> ")" <block>

<param-list> ::= <param-decl>
			| <param-decl> "," <param-list>

<param-decl> ::= <id>
			|"[]" <id>
			|"||" <id>

<block> := "{" <var-or-stmt-list>"}"


<var-or-stmt-list> ::= <var-decl>
				| <stmt> 
			  	| <var-decl> <var-or-stmt-list> 
				| <stmt> <var-or-stmt-list> 

<var-decl> ::= "VAR" <id>
		    |"VAR" "[" <number> "]" <id> 
   		    |"VAR" "||" <id> 

<stmt> ::= <assign>
		| <swap>
		| <branch>
		| <for-loop>
           | <expr>
		| <print>
		| <println>
		| <read>
		| <stack-push>
		| <stack-pop>
		

<assign> := <ref> ":=" <expr>

<swap> := <ref> ":=:" <ref>

<branch> := "IF" <condition-list> <block>
		
<for-loop> := "FOR" "(" <assignment-list> ";" <condition-list>  ";" <assignment-list>")" <block>
	|"FOR" "(" ";" <condition-list> ";" <assignment-list>")" <block>


<condition-list> := <condition>
			   | <condition> "&&" <condition-list>
			   | <condition> "||" <condition-list>

<condition> := <expr> "=" <expr>
		    |<expr> "<>" <expr>
		    |<expr> "<" <expr>
		    |<expr> "<=" <expr>
		    |<expr> ">" <expr>
		    |<expr> ">=" <expr>
		    

<assignment-list> ::= <assign>
				|<assign> "," <assignment-list> 

<stack-push> ::= "PUSH" "(" <id> "," <id> ")"
<stack-pop> ::= "POP" "(" <id> ")"

<expr> ::= <term>
		|<expr> "+" <term>
		|<expr> "-" <term>

<term> ::= <factor>
		| <term> "*" <factor>
		| <term> "/" <factor>

<factor> ::= <exponent>
		  | <factor> "**" <factor>

<exponent> ::= "(" <expr> ")"
			| <ref>
			| <literal>
			| <call>
			| "LEN" "(" <id> ")"

<print> ::= "PRINT" <arg-list>
<println> ::= "PRINTLN" <arg-list>

<arg-list> ::= <expr>
		    |<expr> "," <arg-list>

<read> ::= "INPUT" <string> ";" <ref-list>
		|"INPUT" <ref-list>

<ref-list> ::= <ref>
		   |<ref> "," <ref-list>

<ref> ::= <id>
	    | <id> "[" <arg-list> "]"

<literal> ::= <number>
		   |<string>

<call> ::= <id> "(" <arg-list> ")"
		|<id> "(" ")"

<number> ::= <integer> 
		  <integer> "." <integer>

< integer >     ::= < digit >
                    | < integer > < digit >

<string> ::= "\"" <characters> "\""
<characters> ::= <character>
			| <characters> <character>

<id> ::= <letter>
	   | "_"
	   | <id> <digit>
         | <id><letter>



